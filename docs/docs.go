// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2022-01-08 01:38:46.665678 -0300 -03 m=+12.854268992
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "url": "https://github.com/garciacer87/product-api"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/product": {
            "get": {
                "description": "Retrieves all the products stored in the database",
                "tags": [
                    "product list"
                ],
                "summary": "Retrieves all the products stored in the database",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contract.Product"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contract.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contract.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new product",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "product create"
                ],
                "summary": "Creates a new product",
                "parameters": [
                    {
                        "description": "product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contract.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contract.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contract.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contract.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/product/{sku}": {
            "get": {
                "description": "Get a product by its SKU",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "product get"
                ],
                "summary": "Get a product by its SKU",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product sku",
                        "name": "sku",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contract.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contract.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contract.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contract.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a existing product",
                "tags": [
                    "product delete"
                ],
                "summary": "Deletes an existing product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sku product",
                        "name": "sku",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "product patch",
                        "name": "patch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contract.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contract.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contract.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contract.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contract.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a existing product",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "product patch"
                ],
                "summary": "Updates an existing product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product sku",
                        "name": "sku",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "product patch",
                        "name": "patch",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contract.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contract.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contract.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contract.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/contract.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "contract.Product": {
            "type": "object",
            "required": [
                "brand",
                "imageURL",
                "name",
                "price",
                "sku"
            ],
            "properties": {
                "altImages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "brand": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "imageURL": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "price": {
                    "type": "number",
                    "maximum": 99999999,
                    "minimum": 1
                },
                "size": {
                    "type": "integer",
                    "maximum": 9999999999,
                    "minimum": 0
                },
                "sku": {
                    "type": "string"
                }
            }
        },
        "contract.Response": {
            "type": "object",
            "properties": {
                "message": {},
                "status": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0.0",
	Host:        "http://localhost:8080",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "Product-API",
	Description: "Basic API to manage CRUD operations on products",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
